{"version":3,"sources":["serviceWorker.js","services/AuthService.js","services/BuildingService.js","context.js","components/styled-components/Navbar.js","components/Signup/SignupContainer.js","components/Login/LoginContainer.js","components/Profile/UserData/UserData.js","components/GetProjects/GetProjects.js","components/Profile/Profile.js","components/home/Home.js","components/CreateProject/CreateProject.js","components/Allprojects/AllProjects.js","Router.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","baseURL","process","BACKEND","service","axios","create","withCredentials","AUTH_SERVICE","signup","data","post","login","getUser","get","logout","building","BuildingService","getbuildings","allUsers","MyContext","createContext","MyProvider","loggedUser","formSignup","name","email","password","loginForm","user","projects","handleInput","e","obj","a","target","value","setState","handleSignup","async","preventDefault","Swal","fire","handleLogin","cb","err","handleLogout","localStorage","clear","handlegetprojects","allBuildings","document","cookie","this","Provider","props","children","Component","StyledNavbar","styled","nav","withRouter","Consumer","context","exact","to","activeClassName","onClick","history","push","SignupContainer","onSubmit","Item","prefix","type","style","color","placeholder","onChange","address","phone","clave_edificio","htmlType","LoginContainer","React","contextType","Meta","Card","UserData","className","hoverable","width","title","description","GetProjects","map","project","i","direccion","key","Profile","StyledHome","div","Home","TextArea","Input","Select","Option","CreateProject","handleProject","for","projectForm","rows","required","AllProjects","allProjects","cover","alt","src","photoURL","Routes","path","component","ReactDOM","render","Router","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9be8aca9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios'\n\nconst baseURL = process.env.BACKEND\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n})\n\nconst AUTH_SERVICE = {\n  signup: data => {\n    return service.post('/signup', data)\n  },\n  login: data => {\n    return service.post('/login', data)\n  },\n  getUser: () => {\n    return service.get('/profile')\n  },\n  logout: () => {\n    return service.get('/logout')\n  }\n}\n\nexport default AUTH_SERVICE","import axios from \"axios\";\n\n// aqui cual va , necesita ser una variable para cuando haga deploy ?\nconst baseURL = 'process.env.BACKEND/edificios'\n\nconst building = axios.create({\n    baseURL,\n    withCredentials: true\n})\n\nconst BuildingService = {\n    getbuildings: () => {\n        return building.get(\"/\")\n    },\n    getUser: building => {\n        return building.post('/myUsers', building)\n    },\n    allUsers: building => {\n        return building.post('/allUsers', building)\n    },\n    logout: () => {\n        return building.get('/logout')\n    }\n}\n\nexport default BuildingService\n\n\n\n","import React, { Component, createContext } from 'react'\nimport AUTH_SERVICE from './services/AuthService'\nimport Swal from 'sweetalert2'\nimport BuildingService from './services/BuildingService'\n\nexport const MyContext = createContext()\n\nclass MyProvider extends Component {\n  state = {\n    loggedUser: false,\n    formSignup: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    loginForm: {\n      email: '',\n      password: ''\n    },\n    user: {},\n    projects:[],\n    \n  }\n\n  async componentDidMount () {\n    if (document.cookie) {\n      AUTH_SERVICE.getUser()\n        .then (({ data }) => {\n          this.setState({ loggedUser: true, user: data.user })\n          Swal.fire(`Welcome back ${data.user.name} `, '', 'success')\n        })\n        .catch(err => console.log(err))\n    }\n    this.handlegetprojects()\n  }\n\n  handleInput = (e, obj) => {\n    const a = this.state[obj]\n    const key = e.target.name\n    a[key] = e.target.value\n    this.setState({ obj: a })\n  }\n\n  handleSignup = async e => {\n    e.preventDefault()\n    const { data } = await AUTH_SERVICE.signup(this.state.formSignup)\n    Swal.fire(`Welcome ${data.user.name}`, 'User created', 'success')\n  }\n\n  handleLogin = (e, cb) => {\n    e.preventDefault()\n    AUTH_SERVICE.login(this.state.loginForm)\n      .then(({ data }) => {\n        this.setState({ loggedUser: true, user: data.user })\n        cb()\n      })\n      .catch(err => {\n        Swal.fire(`Datos Incorrectos`, 'error')\n      })\n  }\n\n  handleLogout = async cb => {\n    await AUTH_SERVICE.logout()\n    window.localStorage.clear()\n    this.setState({ loggedUser: false, user: {} })\n    cb()\n  }\n  handlegetprojects = async () =>{\n   const {data} = await BuildingService.getbuildings()\n   this.setState({ projects: data.allBuildings })\n  //  console.log(this.state.projects)\n   return data\n  }\n\n\n  render() {\n    // console.log(this.state)\n    return (\n      <MyContext.Provider\n        value={{\n          handlegetprojects: this.handlegetprojects,\n          loggedUser: this.state.loggedUser,\n          formSignup: this.state.formSignup,\n          loginForm: this.state.loginForm,\n          handleInput: this.handleInput,\n          handleSignup: this.handleSignup,\n          handleLogin: this.handleLogin,\n          handleLogout: this.handleLogout,\n          user: {},\n          projects: []\n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    )\n  }\n}\n\nexport default MyProvider","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { MyContext } from '../../context'\nimport { withRouter } from 'react-router-dom'\n\nconst StyledNavbar = styled.nav`\n  width: 100vw;\n  height: 7vh;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 10px;\n  box-sizing: border-box;\n  & a {\n    padding: 5px;\n    color: black\n    text-decoration: none;\n  }\n  & a.navbar-active {\n    color: #0f4c81;\n  }\n`\n\nfunction Navbar(props) {\n  console.log(props)\n  return (\n    <MyContext.Consumer>\n      {context => {\n        return (\n          <StyledNavbar>\n            <NavLink exact to=\"/\" activeClassName=\"navbar-active\">\n              Home\n            </NavLink>\n            <NavLink exact to=\"/signup\" activeClassName=\"navbar-active\">\n              Signup\n            </NavLink>\n            {!context.loggedUser && (\n              <NavLink exact to=\"/login\" activeClassName=\"navbar-active\">\n                Login\n              </NavLink>\n            )}\n            {context.loggedUser && (\n              <span\n                onClick={() =>\n                  context.handleLogout(() => {\n                    props.history.push('/login')\n                  })\n                }\n              >\n                Logout\n              </span>\n            )}\n          </StyledNavbar>\n        )\n      }}\n    </MyContext.Consumer>\n  )\n}\n\nexport default withRouter(Navbar)","import React from 'react'\nimport { Form, Input, Icon, Button } from 'antd'\nimport { MyContext } from '../../context'\n\nexport default function SignupContainer(props) {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <Form\n          onSubmit={e => {\n            context.handleSignup(e)\n             props.history.push('/login')\n          }}\n        >\n          <Form.Item>\n            <Input\n              name=\"name\"\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Nombre Completo\"\n              type=\"text\"\n              value={context.formSignup.name}\n              onChange={e => context.handleInput(e, 'formSignup')}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Input\n              name=\"address\"\n              prefix={<Icon type=\"address\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Direccion\"\n              type=\"text\"\n              value={context.formSignup.address}\n              onChange={e => context.handleInput(e, 'formSignup')}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Input\n              name=\"phone\"\n              prefix={<Icon type=\"phone\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Teléfono\"\n              type=\"text\"\n              value={context.formSignup.phone}\n              onChange={e => context.handleInput(e, 'formSignup')}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Input\n              name=\"clave_edificio\"\n              prefix={<Icon type=\"clave_edificio\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Clave\"\n              type=\"text\"\n              value={context.formSignup.clave_edificio}\n              onChange={e => context.handleInput(e, 'formSignup')}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Input\n              name=\"email\"\n              prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Email\"\n              type=\"email\"\n              value={context.formSignup.email}\n              onChange={e => context.handleInput(e, 'formSignup')}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Password\"\n              value={context.formSignup.password}\n              onChange={e => context.handleInput(e, 'formSignup')}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Signup\n            </Button>\n          </Form.Item>\n        </Form>\n      )}\n    </MyContext.Consumer>\n  )\n}","import React from 'react'\nimport { Form, Input, Icon, Button } from 'antd'\nimport { MyContext } from '../../context'\n\nexport default class LoginContainer extends React.Component {\n  componentDidMount() {\n    console.log(this.context)\n    if (this.context.loggedUser) {\n      console.log(';lol')\n      return this.props.history.push('/profile')\n    }\n  }\n\n  render() {\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <Form\n            onSubmit={e => {\n              context.handleLogin(e, () => {\n                this.props.history.push('/profile')\n              })\n            }}\n          >\n            <Form.Item>\n              <Input\n                name=\"email\"\n                prefix={\n                  <Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Email\"\n                type=\"email\"\n                value={context.loginForm.email}\n                onChange={e => context.handleInput(e, 'loginForm')}\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Input\n                name=\"password\"\n                type=\"password\"\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Password\"\n                value={context.loginForm.password}\n                onChange={e => context.handleInput(e, 'loginForm')}\n              />\n            </Form.Item>\n\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Login\n              </Button>\n            </Form.Item>\n          </Form>\n        )}\n      </MyContext.Consumer>\n    )\n  }\n}\n\nLoginContainer.contextType = MyContext","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Card } from 'antd'\nimport { MyContext } from '../../../context'\nconst { Meta } = Card\n\nexport default function UserData(props) {\n    //console.log(props)\n    return (\n        <MyContext.Consumer>\n            {context => (\n                <div className=\"col\">\n                    <h1>Usuario</h1>\n\n\n\n                    <Card\n                        hoverable\n                        style={{ width: 240 }}\n                                          >\n                        <Meta title={context.user.name} description={context.user.email} />\n                        <div className=\"boton-crear\">\n                            <Link to={\"/createProject\"}>\n                                <button type=\"submit\" className=\"btn btn-primary \" >Crear un edificio</button>\n                            </Link>\n                        </div>\n                    </Card>\n                    <Card\n                        hoverable\n                        style={{ width: 240 }}\n                       \n                    >\n                        <Meta title={context.user.name} description={context.user.email} />\n                        <div className=\"boton-crear\">\n                            <Link to={\"/createProject\"}>\n                                <button type=\"submit\" className=\"btn btn-primary \" >Registrar un Pago</button>\n                            </Link>\n                        </div>\n                    </Card>\n\n\n                </div>\n            )}\n        </MyContext.Consumer>\n    )\n}","import React from \"react\";\nimport { Card } from 'antd'\n//import DataService from '../../services/DataService';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { MyContext } from './../../context'\nconst { Meta } = Card\n\nexport default function GetProjects(props) {\n   \n    return (  \n        <MyContext.Consumer>\n            {context => (\n                <div className=\"form\">\n                    {console.log(\"mi context project\" + context.handlegetprojects) }\n            \n                    <h1>Mis Edificios</h1>\n                    {context.projects.map((project, i) => {\n                     return(\n                     <Card\n                     hoverable\n                     style={{ width: 240 }}\n                     \n                 >\n                     <Meta title={project.name} description={project.direccion} key={i}/>\n                 </Card>\n                     ) \n                    })}\n                </div>\n            )}\n        </MyContext.Consumer>\n    )\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { MyContext } from '../../context'\nimport UserData from './UserData/UserData'\nimport GetProjects from '../GetProjects/GetProjects'\n\nexport default function Profile(props) {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <div className=\"container\">\n          <div className=\"row\">\n            <UserData/>\n            <div className=\"col\">\n            <GetProjects/>\n            </div>\n            <div className=\"col\">\n              \n            </div>\n          </div>\n        </div>\n      )}\n    </MyContext.Consumer>\n  )\n}","import React from 'react';\nimport styled from 'styled-components'\n\nconst StyledHome = styled.div`\ndiv{\n   background-image: url(\"/main-bg001.jpg\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 100vh;\n  font-size: 50px;\n  margin: 0;\n  padding: 0;\n  height:500px;\n  width:100vw;\n}\n  h1{\n    height: 40px;\n    color: blue;\n    text-align: center;\n    padding: 1% 1% 1% 1%;\n    margin: 0;\n    font-weight: bolder;\n  }\n  img{\n    width: 100px;\n  }\n`\n\n\n\nfunction Home() {\n\n  \n\n  return (\n    <div>\n\n    <StyledHome>\n      <h1>AEDIFICIUM LTS</h1>\n      <div ></div> \n  </StyledHome>\n\n\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Input, Button, Select } from 'antd'\nimport 'bootstrap/dist/css/bootstrap.css'\n//import DataService from '../../services/DataService'\nimport {MyContext} from '../../context'\nconst { TextArea } = Input;\nconst { Option } = Select;\n\n\n//import { FormAddProject }  from \"../../components/styled-components/components\"\n\nexport default function CreateProject(props) {\n    return(\n        <MyContext.Consumer>\n            {context =>(\n                <div className=\"form\">\n\n                <Form onSubmit={e=>{\n                    context.handleProject(e)\n                    props.history.push('/profile')\n                }}\n                >\n                    <Form.Item>\n                        <label for=\"exampleFormControlTextarea1\">Nombre del Edificio</label>\n                        <Input\n                            name=\"clave_edificio\"\n                            placeholder=\"clave del edificio\"\n                            type=\"text\"\n                            value= {context.projectForm.clave_edificio}\n                            onChange={e => context.handleInput(e, 'projectForm')}\n                            // required\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <label for=\"exampleFormControlTextarea1\">Dirección</label>\n                        <TextArea rows={4}\n                            name=\"direccion\"\n                            value={context.projectForm.direccion}\n                            onChange={e => context.handleInput(e, 'projectForm')}\n                            required\n                        />\n                    </Form.Item>\n\n                    {/* <Form.Item label=\"Categoría\" hasFeedback validateStatus=\"Success\">\n                        <Select\n                            defaultValue=\"Campaña Ecológica\"\n                            name=\"category\"\n                            value={context.projectForm.category}\n                            //onChange={context.handleChange}\n                            onChange={e => context.handleSelect(e, 'projectForm')}\n                        >\n                            <Option name=\"category\" value=\"Campaña Ecológica\" onChange={e => context.handleSelect(e, 'projectForm')}>Campaña Ecológica</Option>\n                            <Option name=\"category\" value=\"Donación\">Donación</Option>\n                            <Option value=\"Reciclaje\">Reciclaje</Option>\n                            <Option value=\"Venta de Artículos\">Venta de Artículos</Option>\n                            <Option value=\"Energías Limpias\">Energías Limpias</Option>\n                            <Option value=\"Rescate Animal\">Rescate Animal</Option>\n                        </Select>\n                    </Form.Item> */}\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Crear\n                  </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            )}\n\n        </MyContext.Consumer>\n\n    )\n\n}","import React from \"react\";\nimport { Card } from 'antd'\n//import { Form, Input, Button, Select } from 'antd'\n//import DataService from '../../services/DataService';\nimport 'bootstrap/dist/css/bootstrap.css'\n//import DataService from '../../services/DataService'\nimport { MyContext } from '../../context'\nconst { Meta } = Card\n//import { FormAddProject }  from \"../../components/styled-components/components\"\n\nexport default function AllProjects(props) {\n    return (\n        <MyContext.Consumer>\n            {context => (\n                <div className=\"form\">\n                    <h1>Edificios Existentes</h1>\n                    {context.allProjects.map((project, i) => {\n                     return(\n                     <Card\n                     hoverable\n                     style={{ width: 240 }}\n                     cover={<img alt=\"photoProfile\" src={project.photoURL} key={i}/>}\n                 >\n                     <Meta title={project.title} description={project.description} key={i}/>\n                 </Card>\n                     ) \n                    })}\n                </div>\n            )}\n        </MyContext.Consumer>\n    )\n}","\nimport React from 'react'\nimport { BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/styled-components/Navbar'\nimport SignupContainer from './components/Signup/SignupContainer'\nimport LoginContainer from './components/Login/LoginContainer'\nimport Profile from './components/Profile/Profile'\nimport Home from './components/home/Home'\nimport CreateProject from './components/CreateProject/CreateProject'\nimport AllProjects from './components/Allprojects/AllProjects'\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signup\" component={SignupContainer} />\n        <Route exact path=\"/login\" component={LoginContainer} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/createProject\" component={CreateProject} />\n        <Route exact path=\"/allProjects\" component={AllProjects} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport * as serviceWorker from './serviceWorker'\nimport Router from './Router'\nimport MyProvider from './context'\n\nReactDOM.render(\n  <MyProvider>\n    <Router />\n  </MyProvider>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()"],"sourceRoot":""}